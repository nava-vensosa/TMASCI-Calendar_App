{"ast":null,"code":"var _jsxFileName = \"/workspaces/TMASCI-Calendar_App/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = 'YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com';\nconst API_KEY = 'YOUR_GOOGLE_API_KEY';\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'];\nconst SCOPES = 'https://www.googleapis.com/auth/calendar.readonly';\nconst localizer = momentLocalizer(moment);\nfunction App() {\n  _s();\n  const [signedIn, setSignedIn] = useState(false);\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // Load Google API\n    window.gapi.load('client:auth2', initClient);\n  }, []);\n  function initClient() {\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(() => {\n      // Listen for sign-in state changes.\n      window.gapi.auth2.getAuthInstance().isSignedIn.listen(setSignedIn);\n      // Handle the initial sign-in state.\n      setSignedIn(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n      if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n        listUpcomingEvents();\n      }\n    });\n  }\n  function handleSignIn() {\n    window.gapi.auth2.getAuthInstance().signIn();\n  }\n  function handleSignOut() {\n    window.gapi.auth2.getAuthInstance().signOut();\n    setEvents([]);\n  }\n  function listUpcomingEvents() {\n    window.gapi.client.calendar.events.list({\n      calendarId: 'primary',\n      timeMin: new Date().toISOString(),\n      showDeleted: false,\n      singleEvents: true,\n      maxResults: 50,\n      orderBy: 'startTime'\n    }).then(response => {\n      const items = response.result.items || [];\n      const formatted = items.map(event => ({\n        id: event.id,\n        title: event.summary,\n        start: event.start.dateTime || event.start.date,\n        end: event.end.dateTime || event.end.date,\n        allDay: !event.start.dateTime\n      }));\n      setEvents(formatted);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-half\",\n      children: !signedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign in to Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSignIn,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSignOut,\n          style: {\n            float: 'right'\n          },\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Google Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          localizer: localizer,\n          events: events,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          defaultView: \"week\",\n          style: {\n            height: 500,\n            background: 'transparent'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kY44oi21u5iW3lzsP+VhkQp2WCA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","localizer","App","_s","signedIn","setSignedIn","events","setEvents","window","gapi","load","initClient","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","get","listUpcomingEvents","handleSignIn","signIn","handleSignOut","signOut","calendar","list","calendarId","timeMin","Date","toISOString","showDeleted","singleEvents","maxResults","orderBy","response","items","result","formatted","map","event","id","title","summary","start","dateTime","date","end","allDay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","float","startAccessor","endAccessor","defaultView","height","background","_c","$RefreshReg$"],"sources":["/workspaces/TMASCI-Calendar_App/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst CLIENT_ID = 'YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com';\nconst API_KEY = 'YOUR_GOOGLE_API_KEY';\nconst DISCOVERY_DOCS = [\n  'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest',\n];\nconst SCOPES = 'https://www.googleapis.com/auth/calendar.readonly';\n\nconst localizer = momentLocalizer(moment);\n\nfunction App() {\n  const [signedIn, setSignedIn] = useState(false);\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    // Load Google API\n    window.gapi.load('client:auth2', initClient);\n  }, []);\n\n  function initClient() {\n    window.gapi.client\n      .init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n      .then(() => {\n        // Listen for sign-in state changes.\n        window.gapi.auth2.getAuthInstance().isSignedIn.listen(setSignedIn);\n        // Handle the initial sign-in state.\n        setSignedIn(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n        if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n          listUpcomingEvents();\n        }\n      });\n  }\n\n  function handleSignIn() {\n    window.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function handleSignOut() {\n    window.gapi.auth2.getAuthInstance().signOut();\n    setEvents([]);\n  }\n\n  function listUpcomingEvents() {\n    window.gapi.client.calendar.events\n      .list({\n        calendarId: 'primary',\n        timeMin: new Date().toISOString(),\n        showDeleted: false,\n        singleEvents: true,\n        maxResults: 50,\n        orderBy: 'startTime',\n      })\n      .then((response) => {\n        const items = response.result.items || [];\n        const formatted = items.map((event) => ({\n          id: event.id,\n          title: event.summary,\n          start: event.start.dateTime || event.start.date,\n          end: event.end.dateTime || event.end.date,\n          allDay: !event.start.dateTime,\n        }));\n        setEvents(formatted);\n      });\n  }\n\n  return (\n    <div className=\"split-screen\">\n      <div className=\"top-half\">\n        {!signedIn ? (\n          <div className=\"modal\">\n            <h2>Sign in to Google</h2>\n            <button onClick={handleSignIn}>Sign in with Google</button>\n          </div>\n        ) : (\n          <>\n            <button onClick={handleSignOut} style={{ float: 'right' }}>\n              Sign Out\n            </button>\n            <h2>Your Google Calendar</h2>\n            <Calendar\n              localizer={localizer}\n              events={events}\n              startAccessor=\"start\"\n              endAccessor=\"end\"\n              defaultView=\"week\"\n              style={{ height: 500, background: 'transparent' }}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,SAAS,GAAG,kDAAkD;AACpE,MAAMC,OAAO,GAAG,qBAAqB;AACrC,MAAMC,cAAc,GAAG,CACrB,+DAA+D,CAChE;AACD,MAAMC,MAAM,GAAG,mDAAmD;AAElE,MAAMC,SAAS,GAAGV,eAAe,CAACC,MAAM,CAAC;AAEzC,SAASU,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACAoB,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,cAAc,EAAEC,UAAU,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEN,SAASA,UAAUA,CAAA,EAAG;IACpBH,MAAM,CAACC,IAAI,CAACG,MAAM,CACfC,IAAI,CAAC;MACJC,MAAM,EAAEhB,OAAO;MACfiB,QAAQ,EAAElB,SAAS;MACnBmB,aAAa,EAAEjB,cAAc;MAC7BkB,KAAK,EAAEjB;IACT,CAAC,CAAC,CACDkB,IAAI,CAAC,MAAM;MACV;MACAV,MAAM,CAACC,IAAI,CAACU,KAAK,CAACC,eAAe,CAAC,CAAC,CAACC,UAAU,CAACC,MAAM,CAACjB,WAAW,CAAC;MAClE;MACAA,WAAW,CAACG,MAAM,CAACC,IAAI,CAACU,KAAK,CAACC,eAAe,CAAC,CAAC,CAACC,UAAU,CAACE,GAAG,CAAC,CAAC,CAAC;MACjE,IAAIf,MAAM,CAACC,IAAI,CAACU,KAAK,CAACC,eAAe,CAAC,CAAC,CAACC,UAAU,CAACE,GAAG,CAAC,CAAC,EAAE;QACxDC,kBAAkB,CAAC,CAAC;MACtB;IACF,CAAC,CAAC;EACN;EAEA,SAASC,YAAYA,CAAA,EAAG;IACtBjB,MAAM,CAACC,IAAI,CAACU,KAAK,CAACC,eAAe,CAAC,CAAC,CAACM,MAAM,CAAC,CAAC;EAC9C;EAEA,SAASC,aAAaA,CAAA,EAAG;IACvBnB,MAAM,CAACC,IAAI,CAACU,KAAK,CAACC,eAAe,CAAC,CAAC,CAACQ,OAAO,CAAC,CAAC;IAC7CrB,SAAS,CAAC,EAAE,CAAC;EACf;EAEA,SAASiB,kBAAkBA,CAAA,EAAG;IAC5BhB,MAAM,CAACC,IAAI,CAACG,MAAM,CAACiB,QAAQ,CAACvB,MAAM,CAC/BwB,IAAI,CAAC;MACJC,UAAU,EAAE,SAAS;MACrBC,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACjCC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAE,IAAI;MAClBC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;IACX,CAAC,CAAC,CACDpB,IAAI,CAAEqB,QAAQ,IAAK;MAClB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,MAAM,CAACD,KAAK,IAAI,EAAE;MACzC,MAAME,SAAS,GAAGF,KAAK,CAACG,GAAG,CAAEC,KAAK,KAAM;QACtCC,EAAE,EAAED,KAAK,CAACC,EAAE;QACZC,KAAK,EAAEF,KAAK,CAACG,OAAO;QACpBC,KAAK,EAAEJ,KAAK,CAACI,KAAK,CAACC,QAAQ,IAAIL,KAAK,CAACI,KAAK,CAACE,IAAI;QAC/CC,GAAG,EAAEP,KAAK,CAACO,GAAG,CAACF,QAAQ,IAAIL,KAAK,CAACO,GAAG,CAACD,IAAI;QACzCE,MAAM,EAAE,CAACR,KAAK,CAACI,KAAK,CAACC;MACvB,CAAC,CAAC,CAAC;MACH1C,SAAS,CAACmC,SAAS,CAAC;IACtB,CAAC,CAAC;EACN;EAEA,oBACEhD,OAAA;IAAK2D,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3B5D,OAAA;MAAK2D,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtB,CAAClD,QAAQ,gBACRV,OAAA;QAAK2D,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpB5D,OAAA;UAAA4D,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BhE,OAAA;UAAQiE,OAAO,EAAElC,YAAa;UAAA6B,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,gBAENhE,OAAA,CAAAE,SAAA;QAAA0D,QAAA,gBACE5D,OAAA;UAAQiE,OAAO,EAAEhC,aAAc;UAACiC,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAP,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThE,OAAA;UAAA4D,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BhE,OAAA,CAACJ,QAAQ;UACPW,SAAS,EAAEA,SAAU;UACrBK,MAAM,EAAEA,MAAO;UACfwD,aAAa,EAAC,OAAO;UACrBC,WAAW,EAAC,KAAK;UACjBC,WAAW,EAAC,MAAM;UAClBJ,KAAK,EAAE;YAAEK,MAAM,EAAE,GAAG;YAAEC,UAAU,EAAE;UAAc;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA,eACF;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvD,EAAA,CAvFQD,GAAG;AAAAiE,EAAA,GAAHjE,GAAG;AAyFZ,eAAeA,GAAG;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}